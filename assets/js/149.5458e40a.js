(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{333:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"编写基础请求代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写基础请求代码"}},[t._v("#")]),t._v(" 编写基础请求代码")]),t._v(" "),a("p",[t._v("我们这节课开始编写 "),a("code",[t._v("ts-axios")]),t._v(" 库，我们的目标是实现简单的发送请求功能，即客户端通过 "),a("code",[t._v("XMLHttpRequest")]),t._v(" 对象把请求发送到 server 端，server 端能收到请求并响应即可。")]),t._v(" "),a("p",[t._v("我们实现 "),a("code",[t._v("axios")]),t._v(" 最基本的操作，通过传入一个对象发送请求，如下：")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("axios")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'get'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/simple/get'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"创建入口文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建入口文件"}},[t._v("#")]),t._v(" 创建入口文件")]),t._v(" "),a("p",[t._v("我们删除 "),a("code",[t._v("src")]),t._v(" 目录下的文件，先创建一个 "),a("code",[t._v("index.ts")]),t._v(" 文件，作为整个库的入口文件，然后我们先定义一个 "),a("code",[t._v("axios")]),t._v(" 方法，并把它导出，如下：")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("axios")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("config")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" axios\n\n")])])]),a("p",[t._v("这里 TypeScript 编译器会检查到错误，分别是 "),a("code",[t._v("config")]),t._v(" 的声明上有隐含的 "),a("code",[t._v("any")]),t._v(" 报错，以及代码块为空。代码块为空我们比较好理解，第一个错误的原因是因为我们给 TypeScript 编译配置的 "),a("code",[t._v("strict")]),t._v(" 设置为 "),a("code",[t._v("true")]),t._v(" 导致。")]),t._v(" "),a("h3",{attrs:{id:"编译配置文件-tsconfig-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译配置文件-tsconfig-json"}},[t._v("#")]),t._v(" 编译配置文件 tsconfig.json")]),t._v(" "),a("p",[a("code",[t._v("tsconfig.json")]),t._v(" 文件中指定了用来编译这个项目的根文件和编译选项，关于它的具体学习，我希望同学们去"),a("a",{attrs:{href:"https://www.typescriptlang.org/docs/handbook/tsconfig-json.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),a("OutboundLink")],1),t._v("系统学习一下")]),t._v(" "),a("p",[t._v("我们在之前讲 TypeScript 的基础时，会运行 "),a("code",[t._v("tsc")]),t._v(" 命令去编译 TypeScript 文件，编译器会从当前目录开始去查找 "),a("code",[t._v("tsconfig.json")]),t._v(" 文件，作为编译时的一些编译选项。")]),t._v(" "),a("p",[t._v("我们来看一下 tsconfig.json 文件，它包含了很多编译时的配置，其中我们把 "),a("code",[t._v("strict")]),t._v(" 设置为 "),a("code",[t._v("true")]),t._v("，它相当于启用所有严格类型的检查选项。启用 "),a("code",[t._v("--strict")]),t._v(" 相当于启用 "),a("code",[t._v("--noImplicitAny")]),t._v(","),a("code",[t._v("--noImplicitThis")]),t._v(","),a("code",[t._v("--alwaysStrict")]),t._v("，"),a("code",[t._v("--strictNullChecks")]),t._v(" 和 "),a("code",[t._v("--strictFunctionTypes")]),t._v(" 和 "),a("code",[t._v("--strictPropertyInitialization")]),t._v("。")]),t._v(" "),a("p",[t._v("我们讲 TypeScript 的基础时提到了 "),a("code",[t._v("--strictNullChecks")]),t._v("，其它的编译配置我建议同学们都去查看它的"),a("a",{attrs:{href:"https://www.typescriptlang.org/docs/handbook/compiler-options.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网文档"),a("OutboundLink")],1),t._v("，把它当做手册去查阅即可。")]),t._v(" "),a("h3",{attrs:{id:"定义-axiosrequestconfig-接口类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义-axiosrequestconfig-接口类型"}},[t._v("#")]),t._v(" 定义 AxiosRequestConfig 接口类型")]),t._v(" "),a("p",[t._v("接下来，我们需要给 "),a("code",[t._v("config")]),t._v(" 参数定义一种接口类型。我们创建一个 "),a("code",[t._v("types")]),t._v(" 目录，在下面创建一个 "),a("code",[t._v("index.ts")]),t._v(" 文件，作为我们项目中公用的类型定义文件。")]),t._v(" "),a("p",[t._v("接下来我们来定义 "),a("code",[t._v("AxiosRequestConfig")]),t._v(" 接口类型：")])])}),[],!1,null,null,null);s.default=e.exports}}]);