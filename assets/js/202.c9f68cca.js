(window.webpackJsonp=window.webpackJsonp||[]).push([[202],{265:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"其他核心概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他核心概念"}},[t._v("#")]),t._v(" 其他核心概念")]),t._v(" "),a("h2",{attrs:{id:"虚拟dom和key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom和key"}},[t._v("#")]),t._v(" 虚拟DOM和key")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/vue_one_virtualdom.png"),alt:"虚拟dom"}}),t._v(" "),a("p",[t._v("从上面的左边图看到我们以前使用"),a("code",[t._v("js")]),t._v("或者是"),a("code",[t._v("jQuery")]),t._v("都是通过事件"),a("code",[t._v("Event")]),t._v("去直接操作"),a("code",[t._v("DOM")]),t._v("元素，但是页面复杂和项目不断的更替下，这种开发方式会极其的难受，那么就出现了"),a("code",[t._v("react/vue")]),t._v("这种开发方式，这种开发方式如上图右边所示："),a("font",{attrs:{color:"#1E90FF"}},[t._v("通过引入数据中间层，然后事件并不会直接去操作DOM，而是通过事件去改变数据，数据再去映射到DOM元素")])],1),t._v(" "),a("p",[t._v("数据的更新会导致"),a("code",[t._v("DOM")]),t._v("的更新，操作"),a("code",[t._v("DOM")]),t._v("是一件非常消耗性能的事情，我们怎么高效的去操作"),a("code",[t._v("DOM")]),t._v("?我们采用的一种原则是：")]),t._v(" "),a("ul",[a("li",[a("font",{attrs:{color:"#DD1144"}},[t._v("尽可能的去复用我们之前的DOM，当我们数据更新的时候，此时就引入了虚拟DOM的概念")])],1)]),t._v(" "),a("img",{attrs:{src:t.$withBase("/vue_one_state_template.png"),alt:"虚拟DOM的结构"}}),t._v(" "),a("p",[a("font",{attrs:{color:"#1E90FF"}},[t._v("虚拟DOM是一种数据状态state和模板template创造出来的DOM节点数据结构，在这个数据结构中，保留着节点的信息，包括类型，属性和事件等等，当数据更新后我们会生成一个新的数据结构，前后的两个数据结构通过算法的对比。比较出不同的节点，然后提升性能")])],1),t._v(" "),a("p",[t._v("["),a("font",{attrs:{color:"#ff6100"}},[t._v("思考问题")]),t._v("]：为什么不能使用"),a("code",[t._v("index")]),t._v("作为"),a("code",[t._v("key")])],1),t._v(" "),a("h2",{attrs:{id:"如何触发组件的更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何触发组件的更新"}},[t._v("#")]),t._v(" 如何触发组件的更新")]),t._v(" "),a("ul",[a("li",[t._v("状态是组件自身的数据，属性是来自父组件的数据")]),t._v(" "),a("li",[a("font",{attrs:{color:"#1E90FF"}},[t._v("状态的改变未必会触发更新，属性的改变也未必会触发更新")])],1)]),t._v(" "),a("img",{attrs:{src:t.$withBase("/vue_one_update_app.png"),alt:"响应式更新"}}),t._v(" "),a("p",[t._v("根据上面的这个图：")]),t._v(" "),a("ul",[a("li",[a("font",{attrs:{color:"#1E90FF"}},[t._v("组件在实例化的时候对Data下面的数据会做setter和getter的转化，实际上就是做了一层代理，无论什么操作都会先经过代理。")])],1),t._v(" "),a("li",[a("font",{attrs:{color:"#1E90FF"}},[t._v("组件在渲染的时候会把需要到的Data当中的数据放到Watch中，所以组件当中没有用到的数据发生了更新，不会通知到Watch，也就不会触发组件渲染")])],1)]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleNameChange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vue"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" Date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this.name 发生了变化，但是并没有触发子组件更新"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleInfoChange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this.$set(this.info, 'number', 1)")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this.info 发生了变化，但是并没有触发子组件更新"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleListChange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this.list 并没有发生变化，但是触发了子组件更新"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handlebChange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tao'")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this.b 发生了变化，但是没有出发子组件的更新"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("通俗的来讲，就是如果一开始我们没有在"),a("code",[t._v("data() {return {... }}")]),t._v("当中写的属性或者状态，都不存在与"),a("code",[t._v("Data")]),t._v("当中，比如说上述代码中的"),a("font",{attrs:{color:"#1E90FF"}},[t._v("this.name")]),t._v(","),a("font",{attrs:{color:"#1E90FF"}},[t._v("this.info.number")]),t._v("，它们的变化不会通知"),a("code",[t._v("Watch")]),t._v("。另外当"),a("code",[t._v("this.b")]),t._v("发生变化也不会触发子组件更新，因为它并不是页面渲染需要的到的数据，换句话说"),a("code",[t._v("Watch")]),t._v("里面压根就没有它。")],1),t._v(" "),a("p",[t._v("["),a("font",{attrs:{color:"#ff6100"}},[t._v("思考问题")]),t._v("]：数组有哪些方法支持响应式更新，如不支持如何处理，底层原理是如果实现的。")],1)])}),[],!1,null,null,null);s.default=e.exports}}]);