(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{278:function(t,s,e){"use strict";e.r(s);var a=e(0),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"性能工具-性能检测"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#性能工具-性能检测"}},[t._v("#")]),t._v(" 性能工具 - 性能检测")]),t._v(" "),e("h2",{attrs:{id:"http宏观性能检测"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http宏观性能检测"}},[t._v("#")]),t._v(" http宏观性能检测")]),t._v(" "),e("h3",{attrs:{id:"_1-压力测试工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-压力测试工具"}},[t._v("#")]),t._v(" 1. 压力测试工具")]),t._v(" "),e("ul",[e("li",[e("font",{attrs:{color:"#DD1144"}},[t._v("ab(Apache bench)")])],1),t._v(" "),e("li",[e("font",{attrs:{color:"#DD1144"}},[t._v("webbench")])],1)]),t._v(" "),e("p",[t._v("那我们这里使用的就是"),e("code",[t._v("ab")]),t._v("，我们要先到官网上去下载这个工具，这个工具的下载地址在"),e("a",{attrs:{href:"https://www.apachehaus.com/cgi-bin/download.plx",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.apachehaus.com/cgi-bin/download.plx"),e("OutboundLink")],1),t._v(",然后，你根据你自己的电脑的情况安装，我们这里是windowx64，我就点击下面那个下载压缩包")]),t._v(" "),e("img",{attrs:{src:t.$withBase("/node_bff_ab_download.png"),alt:"ab下载工具"}}),t._v(" "),e("p",[t._v("然后在解压后的"),e("code",[t._v("bin")]),t._v("目录打开命令行，输入测试命令就能开始测试了")]),t._v(" "),e("h3",{attrs:{id:"_2-压力测试过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-压力测试过程"}},[t._v("#")]),t._v(" 2. 压力测试过程")]),t._v(" "),e("p",[t._v("当我们启动我们的服务器在"),e("code",[t._v("127.0.0.1:3000")]),t._v("端口后我们在前面下载好的"),e("code",[t._v("ab")]),t._v("文件夹的"),e("code",[t._v("bin")]),t._v("目录下面打开命令行窗口，执行下面的压测命令")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("ab "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c200 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("n1600 http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("download"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n")])])]),e("ul",[e("li",[e("font",{attrs:{color:"#DD1144"}},[t._v("-c")]),t._v(": 即concurrency，用于指定压力测试的并发数,模拟当前共有多少个客户端在进行同时请求")],1),t._v(" "),e("li",[e("font",{attrs:{color:"#DD1144"}},[t._v("-n")]),t._v("：即requests，用于指定压力测试总共的执行次数。")],1)]),t._v(" "),e("p",[t._v("测试结果如下：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("This is ApacheBench, Version "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.3")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Revision")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1843412")]),t._v(" $"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nCopyright "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1996")]),t._v(" Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\n\nBenchmarking "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("be patient"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nCompleted "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("160")]),t._v(" requests\nCompleted "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("320")]),t._v(" requests\nCompleted "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("480")]),t._v(" requests\nCompleted "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("640")]),t._v(" requests\nCompleted "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("800")]),t._v(" requests\nCompleted "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("960")]),t._v(" requests\nCompleted "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1120")]),t._v(" requests\nCompleted "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1280")]),t._v(" requests\nCompleted "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1440")]),t._v(" requests\nCompleted "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1600")]),t._v(" requests\nFinished "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1600")]),t._v(" requests\n\n\nServer Software:\nServer Hostname:        "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\nServer Port:            "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v("\n\nDocument Path:          /download/                 // 访问包的路径\nDocument Length:        "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("264785")]),t._v(" bytes               // 访问包的大小（大概是259kb，你在浏览器上打开network面板看到Doc当中的siza也是259k）\n\nConcurrency Level:      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("                        // 你自己输入压测命令时的并发数\nTime taken "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" tests:   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("13.137")]),t._v(" seconds             // 压测一共花的时间\nComplete requests:      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1600")]),t._v("                       // 成功完成的压测请求数（根据http返回码判断）\nFailed requests:        "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("                          // 压测请求失败的数量\nTotal transferred:      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("423993600")]),t._v(" bytes            // "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1600")]),t._v("次一共传输的总数据量\nHTML transferred:       "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("423656000")]),t._v(" bytes            // "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1600")]),t._v("次html一共传输的总数据量\nRequests per second:    "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("121.80")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#/sec] (mean)      // (最重要qps) 平均每秒的请求数，也就是服务器能最大承受的每秒并发量")]),t._v("\nTime per request:       "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1642.094")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ms"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mean"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       // （重要）200个用户每次请求所花平均时间 \nTime per request:       "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.210")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ms"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mean, across all concurrent requests"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" （最重要）单个用户请求一次的平均时间\nTransfer rate:          "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("31518.92")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Kbytes/sec"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" received // "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("最重要"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 传输速率，或者吞吐量（有多少数据量的交互）\n\nConnection Times "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ms"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n              min  mean"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("+/-sd"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" median   max\nConnect:        "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.5")]),t._v("      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("62")]),t._v("\nProcessing:   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("408")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1595")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("181.5")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1599")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2006")]),t._v("\nWaiting:       "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("35")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("114")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("34.3")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("106")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("214")]),t._v("\nTotal:        "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("409")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1596")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("181.1")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1600")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2007")]),t._v("\n\nPercentage of the requests served within a certain "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ms"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("%   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1600")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("66")]),t._v("%   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1640")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("75")]),t._v("%   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1658")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("%   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1680")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v("%   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1823")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("95")]),t._v("%   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1878")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("98")]),t._v("%   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1992")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v("%   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2002")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("%   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2007")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("longest request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"_3-http服务的性能瓶颈猜测"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-http服务的性能瓶颈猜测"}},[t._v("#")]),t._v(" 3. http服务的性能瓶颈猜测")]),t._v(" "),e("p",[t._v("通过上述的这种报告，我们基本能看到关于服务器性能最重要的四个参数："),e("font",{attrs:{color:"#1E90FF"}},[t._v("Requests per second")]),t._v("，"),e("font",{attrs:{color:"#1E90FF"}},[t._v("Time per request")]),t._v("，"),e("font",{attrs:{color:"#1E90FF"}},[t._v("Time per request")]),t._v("，"),e("font",{attrs:{color:"#1E90FF"}},[t._v("Transfer rate")])],1),t._v(" "),e("p",[t._v("服务器的性能当然有瓶颈的存在，一般瓶颈会被"),e("font",{attrs:{color:"#DD1144"}},[t._v("cpu")]),t._v("、"),e("font",{attrs:{color:"#DD1144"}},[t._v("硬盘")]),t._v("、"),e("font",{attrs:{color:"#DD1144"}},[t._v("网卡")]),t._v("这些硬件部分所限制，比如你的服务器的吞吐量大概就是你网卡的带宽（注意单位换算），那么基本上就是网卡限制了你的服务器的性能。")],1),t._v(" "),e("p",[t._v("那基本上我们在"),e("code",[t._v("linux")]),t._v("测试性能，都会现在"),e("code",[t._v("linux")]),t._v("服务器上跑一些命令，然后在外部进行压测")]),t._v(" "),e("ul",[e("li",[e("font",{attrs:{color:"#DD1144"}},[t._v("top")]),t._v(": 通过跑"),e("code",[t._v("top")]),t._v("命令来监控"),e("code",[t._v("cpu")]),t._v("和内存使用情况的，在外部压测的同时，可以通过监控的"),e("code",[t._v("cpu")]),t._v("占比和内存占比看到底是哪里限制了服务器")],1),t._v(" "),e("li",[e("font",{attrs:{color:"#DD1144"}},[t._v("iostat")]),t._v("：检测各个I/O设备的带宽，比如硬盘I/O在压测的情况下已经到了极限，那就说明服务器可以处理的过来，但是硬盘已经跟不上了，这就是I/O瓶颈")],1)]),t._v(" "),e("p",[t._v("但是基本上在服务器确定的情况下，我们大部分问题其实都是我们自己书写的"),e("code",[t._v("Node-BFF")]),t._v("层，而且就在"),e("font",{attrs:{color:"#DD1144"}},[t._v("node-bff层中的cpu运算上")]),t._v("，比说大面积的字符串拼接等js运算，就体现在程序运行的时候"),e("code",[t._v("cpu")]),t._v("的占用率是"),e("code",[t._v("100%")])],1),t._v(" "),e("p",[t._v("当然还有负载，在负载到达极限的时候，如果是我们"),e("code",[t._v("node")]),t._v("计算性能到达了瓶颈，基本上表现在程序当中就是"),e("font",{attrs:{color:"#DD1144"}},[t._v("某一段代码写的不好，导致了大面积出现了问题")])],1),t._v(" "),e("h2",{attrs:{id:"node微观性能检测"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node微观性能检测"}},[t._v("#")]),t._v(" Node微观性能检测")]),t._v(" "),e("p",[t._v("为了检测具体的"),e("code",[t._v("Node")]),t._v("运行信息，我们现在的压测用具的命令稍做改动：")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("ab "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c50 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("t15 http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("localhost"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("download"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n")])])]),e("h3",{attrs:{id:"_1-profile工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-profile工具"}},[t._v("#")]),t._v(" 1. profile工具")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("node --prof entry.js")]),t._v(" -> 生成"),e("code",[t._v("isolate-00000000003E4090-v8.log")]),t._v("文件（空文件）")]),t._v(" "),e("li",[t._v("执行压测15秒的命令 -> 在"),e("code",[t._v("isolate-00000000003E4090-v8.log")]),t._v("文件中生成了好多内容")]),t._v(" "),e("li",[e("code",[t._v("node --prof-process isolate-00000000003E4090-v8.log > profile.txt")]),t._v("-> 将log文件中的东西进行分析，分析到"),e("code",[t._v("profile.txt")]),t._v("文件当中")])]),t._v(" "),e("p",[t._v("总之呢，这种工具实在是很难看懂，有没有更加简单的工具呢？")]),t._v(" "),e("h3",{attrs:{id:"_2-chrome-devtool"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-chrome-devtool"}},[t._v("#")]),t._v(" 2. Chrome devtool")]),t._v(" "),e("p",[e("font",{attrs:{color:"#1E90FF"}},[e("strong",[t._v("① cpu检测")])])],1),t._v(" "),e("ul",[e("li",[e("code",[t._v("node --inspect-brk entry.js")]),t._v(" -> 启动程序的时候就一开始就暂停，进去后再开始")]),t._v(" "),e("li",[t._v("打开"),e("code",[t._v("chrome://inspect")]),t._v(",点击最下面的"),e("code",[t._v("Target")]),t._v("进入调试，点击开始按钮即可")]),t._v(" "),e("li",[t._v("上面有两个"),e("code",[t._v("Tab")]),t._v("，一个是"),e("code",[t._v("Memory")]),t._v(",一个是"),e("code",[t._v("Profiler")]),t._v("，分别表示的内存和"),e("code",[t._v("cpu")]),t._v("的检测")]),t._v(" "),e("li",[t._v("我们在"),e("code",[t._v("Profiler")]),t._v("当中点击"),e("code",[t._v("Start CPU profiling")]),t._v("按钮")]),t._v(" "),e("li",[t._v("然后开始15秒的压测，"),e("code",[t._v("ab -c50 -t15 http://localhost:3000/download/")])]),t._v(" "),e("li",[t._v("然后回到"),e("code",[t._v("Profiler")]),t._v("的当中点击"),e("code",[t._v("stop")]),t._v("的按钮，就能根据从上到下的耗时去优化")])]),t._v(" "),e("p",[e("font",{attrs:{color:"#1E90FF"}},[e("strong",[t._v("② 内存检测")])])],1),t._v(" "),e("ul",[e("li",[e("code",[t._v("node --inspect-brk entry.js")]),t._v(" -> 启动程序的时候就一开始就暂停，进去后再开始")]),t._v(" "),e("li",[t._v("打开"),e("code",[t._v("chrome://inspect")]),t._v(",点击最下面的"),e("code",[t._v("Target")]),t._v("进入调试，点击开始按钮即可")]),t._v(" "),e("li",[t._v("上面有两个"),e("code",[t._v("Tab")]),t._v("，一个是"),e("code",[t._v("Memory")]),t._v(",一个是"),e("code",[t._v("Profiler")]),t._v("，分别表示的内存和"),e("code",[t._v("cpu")]),t._v("的检测")]),t._v(" "),e("li",[t._v("然后开始15秒的压测，"),e("code",[t._v("ab -c50 -t15 http://localhost:3000/download/")])]),t._v(" "),e("li",[t._v("在压测的过程中，在"),e("code",[t._v("Memory")]),t._v("当中点击"),e("code",[t._v("Take heap snaphot")]),t._v(",生成内存快照")]),t._v(" "),e("li",[t._v("等待压测结束，在"),e("code",[t._v("Memory")]),t._v("当中再次点击"),e("code",[t._v("Take heap snaphot")]),t._v("，生成内存快照")]),t._v(" "),e("li",[t._v("然后点击"),e("code",[t._v("Comparison")]),t._v("来对比两次快照的变化，通过观察"),e("code",[t._v("Alloc.Size")]),t._v("和"),e("code",[t._v("Freed.Size")]),t._v("的差值看到"),e("code",[t._v("Size Delta")]),t._v("，观察内存是否存在泄露")]),t._v(" "),e("li",[t._v("一般在"),e("code",[t._v("snaphot1")]),t._v("和"),e("code",[t._v("snaphot2")]),t._v("之前大小比较十分悬殊的情况下，是一定存在内存泄漏的。")])]),t._v(" "),e("h3",{attrs:{id:"_3-clinic"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-clinic"}},[t._v("#")]),t._v(" 3. clinic")]),t._v(" "),e("p",[t._v("针对比较大的项目，我们可以使用"),e("code",[t._v("clinic")]),t._v("，具体的用法建议你到npm上去学习和使用，这里就不具体解释了")])])}),[],!1,null,null,null);s.default=n.exports}}]);